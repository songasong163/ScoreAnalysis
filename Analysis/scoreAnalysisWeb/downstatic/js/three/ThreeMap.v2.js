import*as THREE from"./build/three.module.js";import ThreeMapV2Impl from"./ThreeMap.v2.impl.js";export default class ThreeMap extends ThreeMapV2Impl{constructor({domElement:e,mapName:i,mapData:t,option:s}){super({domElement:e,mapName:i,mapData:t,option:s}),this.raycaster,this.mouseVector2,this.animationFrameId=null,this.ambientLight,this.directionalLight,this.directionalLightHelper}init(){return this.dispose(),this.initScene(),this.initCamera(),this.initRenderer(),this.initGridHelper(),this.initAxesHelper(),this.render(),this.initLight(),this.initMapByGeoJson(this.mapData),this}render(){this.waveMeshArr.length&&this.waveMeshArr.forEach(e=>{e._s+=this.lightBeamScatterSpeed,e.scale.set(e.size*e._s+1,e.size*e._s+1,e.size*e._s+1),e._s<=1.5?e.material.opacity=2*(e._s-1):e._s>1.5&&e._s<=2?e.material.opacity=1-2*(e._s-1.5):e._s=1}),this.animationFrameId=requestAnimationFrame(this.render.bind(this)),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.flightLineTexture&&(this.flightLineTexture.offset.x-=this.flightLineSpeed)}initScene(){this.scene=new THREE.Scene}initRenderer(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(this.domElement.offsetWidth,this.domElement.offsetHeight),this.renderer.setClearAlpha(0),this.domElement.appendChild(this.renderer.domElement),console.log("THREE当前版本：",THREE.REVISION)}initCamera(){this.camera=new THREE.PerspectiveCamera(45,this.domElement.offsetWidth/this.domElement.offsetHeight,.1,1e4),this.camera.position.set(this.option.angleX,this.option.angleY,this.option.distance),this.camera.lookAt(0,0,0)}initLight(){const e=this.option.light.directionalLight;this.directionalLight=new THREE.DirectionalLight(e.color,e.intensity),this.directionalLight.position.set(e.x,e.y,e.z),this.directionalLight.lookAt(0,0,0),this.initDirectionalLightHelper();const i=this.option.light.ambientLight;this.ambientLight=new THREE.AmbientLight(i.color,i.intensity),this.scene.add(this.ambientLight,this.directionalLight)}initDirectionalLightHelper(){const e=this.option.light.directionalLight;e.helper.show&&(this.directionalLightHelper=new THREE.DirectionalLightHelper(this.directionalLight,e.helper.size,e.helper.color),this.directionalLightHelper.name="directionalLightHelper",this.scene.add(this.directionalLightHelper))}dispose(){try{cancelAnimationFrame(this.animationFrameId),this.camera=null,this.scene.traverse(e=>{e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose(),e=null}),this.domElement.innerHTML="",this.renderer.forceContextLoss(),this.renderer.dispose(),this.scene.clear(),this.scene=null,this.camera=null,this.controls=null,this.renderer.domElement=null,this.renderer=null,this.raycaster=null,this.mouseVector2=null,this.projection=null}catch(e){console.log("ERROR ：clearScene")}}};